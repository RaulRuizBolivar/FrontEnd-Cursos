*{
    margin:0;
    padding: 0;
    box-sizing: border-box;
}
html{
    font-size: 62.5%;
}
body{
    font-size: 1.6rem;
}
.container{
    border: .3rem solid black;
    /*Así se inicia el flexbox */
    display: flex;/**/
    /* Esto sirve para hacer que se vayan acomodando los hijos de esta etiqueta sin salirse en ningun momento, pasando una fila más abajo cuando se ha llenado la fila actual*/
    flex-wrap: wrap;/**/
    /* Para justify-content y align-center, center para centrar todo, flex-end para alinear a la derecha y flex-start para alinear a la izquierda, space-around para centrar los elementos entre ellos, para centrarlos con la misma separación entre ellos mismos se usa space-evently
    justify-content:space-evenly/**/
    /*Align-items tambien tiene valores propios, como strech, que si los elementos internos no tienen altura predefinida, se vuelven igual de altos que su contenedor,  baseline nos permite alinear todos los textos para que tengan la misma línea base
    align-items: baseline;/**/
    /*flex direction: row;Hace que se acomode todo en columnas en vez de en filas, los atributos son row, row-reverse, column, column-reverse y el por defecto es row
    flex-direction: column;/**/
}
.box{
    /*width: 10rem;*/
    height: 10rem;
    /*Flex-basis es la base de ancho para el flex*/
    flex-basis: 10rem;
    flex-grow: 1;
}
.box1{
    background-color: blue;
    /*order:1;
    /*Dentro del order, si algún elemento no tiene order, ira antes de todos los demás y luuego iniciarán los que lo tienen en el orden indicado.*/
    /*flex-grow nos permite agrandar los elementos lateralmente dependiendo del espacio libre que queda, si varios tienen la propiedad se divide el crecimiento dependiendo de los valores dados("Se come el espacio que "sobra"")
    flex-grow: 1;/**/
}
.box2{
    background-color: blueviolet;
}
.box3{
    background-color: burlywood;
}
.box4{
    background-color: cadetblue;
}
.box5{
    background-color: coral;
}
.box6{
    background-color: salmon;
}